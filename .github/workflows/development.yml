name: CI/CD for React Vite

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # ts-check:
  #   name: "Test"
  #   uses: dewviee/poc-github-self-host-runner/.github/workflows/reusable-bun-typescript-check.yml@main
  #   with:
  #     version: 1.2.7

  build:
    name: Build Project
    uses: ./.github/workflows/reusable-build.yml
    # needs: ts-check # Ensures the test job completes successfully before running build

  deploy:
    uses: ./.github/workflows/reuseable-deploy.yml
    with:
      build-name: build-output
      build-path: dist
      destination: ~/deploy-folder-test/development
      clean-up-script-dest: ~/deploy-folder-test/clean_old_builds.sh
    secrets:
      SERVER_USER: ${{ secrets.SERVER_USER }}
      SERVER_HOST: ${{ secrets.SERVER_HOST }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

  ########################## Old deploy script without reusable workflow
  # deploy:
  #   name: Deploy to Server
  #   runs-on: self-hosted
  #   needs: build # Ensures build completes before deploying

  #   steps:
  #     - name: Download Build Artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: build-output
  #         path: dist

  #     - name: Copy Build to Server
  #       env:
  #         SERVER_USER: ${{ secrets.SERVER_USER }}
  #         SERVER_HOST: ${{ secrets.SERVER_HOST }}
  #         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  #       run: |
  #         echo "Deploy..."
  #         echo "$SSH_PRIVATE_KEY" > private_key && chmod 600 private_key

  #         echo "Add Known Host..."
  #         mkdir -p ~/.ssh
  #         ssh-keyscan -H "$SERVER_HOST" >> ~/.ssh/known_hosts

  #         echo "Create folder on Host"
  #         TIMESTAMP=$(date +'%Y-%m-%d_%H-%M-%S')
  #         FOLDER_NAME="${TIMESTAMP}_${GITHUB_SHA::7}"
  #         ssh -i private_key $SERVER_USER@$SERVER_HOST \ mkdir -p ~/deploy-folder-test/${FOLDER_NAME}

  #         echo "Copy file to host"
  #         scp -r -i private_key dist/* $SERVER_USER@$SERVER_HOST:./deploy-folder-test/${FOLDER_NAME}

  #         echo "Zero Downtime Link to latest release folder"
  #         ssh -i private_key $SERVER_USER@$SERVER_HOST <<EOF
  #               cd ~/deploy-folder-test
  #               ln -sfn $FOLDER_NAME release

  #               ./clean_old_builds.sh
  #         EOF

  #         echo "âœ… Deploy Successful "
